{"version":3,"file":"static/js/764.82f421be.chunk.js","mappings":"sMAwEA,UApEe,WAAO,IAAD,EACnB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAE3C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAEMC,GAAWC,EAAAA,EAAAA,OAKjBC,EAAAA,EAAAA,YAAU,WACRC,MAAM,GAAD,OAJS,+BAIT,+BAC8BL,EAD9B,mCAHS,qCAMXM,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAGX,IAAIC,MAAM,8BAClB,IACAJ,MAAK,SAAAK,GACJZ,EAAUY,EAAKC,QAChB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,SAClBC,EAAAA,GAAAA,MAAY,8BACb,GACJ,GAAE,CAAClB,IAgBJ,OACE,4BACE,kBAAMmB,SARO,SAAAC,GACfA,EAAEC,iBAEFpB,EAAeR,EAAaG,IAAI,SACjC,EAIG,WACE,kBAAO0B,KAAK,OAAOC,MAAO5B,EAAO6B,SAjBb,SAAAJ,GACxB,IAAQG,EAAUH,EAAEK,OAAZF,MAER,OACI7B,EADa,KAAV6B,EACa,CAAE5B,MAAO4B,GACT,CAAC,EACtB,KAYK,mBAAQD,KAAK,SAAb,wBAEF,SAAC,KAAD,KACA,wBACGxB,EAAO4B,KAAI,SAAAC,GAAU,IAAD,EACnB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM7B,GAAxC,mBACGyB,EAAMK,aADT,QACkBL,EAAMM,QAFjBN,EAAME,GAMlB,QAIR,C","sources":["pages/Movies.js"],"sourcesContent":["import { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const location = useLocation();\n\n  const baseURL = 'https://api.themoviedb.org/3';\n  const API_KEY = 'd25c90b85b8f344798ffe413cdb42b7f';\n\n  useEffect(() => {\n    fetch(\n      `${baseURL}/search/movie?query=${searchQuery}&language=en-US&api_key=${API_KEY}`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return new Error('Oops, something went wrong!');\n      })\n      .then(data => {\n        setMovies(data.results);\n      })\n      .catch(error => {\n        console.log(error.message);\n        toast.error('Oops, something went wrong!');\n      });\n  }, [searchQuery]);\n\n  const updateQueryString = e => {\n    const { value } = e.target;\n\n    return value !== ''\n      ? setSearchParams({ query: value })\n      : setSearchParams({});\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    setSearchQuery(searchParams.get('query'));\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" value={query} onChange={updateQueryString} />\n        <button type=\"submit\">search</button>\n      </form>\n      <ToastContainer />\n      <ul>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title ?? movie.name}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useSearchParams","searchParams","setSearchParams","query","get","useState","movies","setMovies","searchQuery","setSearchQuery","location","useLocation","useEffect","fetch","then","response","ok","json","Error","data","results","catch","error","console","log","message","toast","onSubmit","e","preventDefault","type","value","onChange","target","map","movie","to","id","state","from","title","name"],"sourceRoot":""}