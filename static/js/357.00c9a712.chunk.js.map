{"version":3,"file":"static/js/357.00c9a712.chunk.js","mappings":"gNA4DA,UAzDgB,WACd,OAA4BA,EAAAA,EAAAA,UAAS,QAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA6BR,OAxBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,iHAEOC,MAAM,GAAD,OANlB,+BAMkB,kBACNJ,EADM,kDALlB,qCAGM,WAEVK,EAFU,QAKFC,GALE,yCAMP,IAAIC,MAAM,+BANH,uBASKF,EAASG,OATd,OASVC,EATU,OAWVC,EAAmBD,EAAOE,QAAQC,OAAO,EAAG,GAClDb,EAAWW,GAEXb,EAAU,YAdM,kDAgBhBgB,QAAQC,IAAR,MACAjB,EAAU,YAjBM,0DAAH,qDAqBjBM,GACD,GAAE,CAACH,KAEF,gCACc,aAAXJ,IACC,wBACGE,EAAQiB,OAAS,EAChBjB,EAAQkB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,yBACE,4BACE,wBAAKD,KACL,uBAAIC,QAHCF,EAOZ,KAED,kDAIM,aAAXrB,IAAyB,mDAG/B,C,sBC1DD,SAASwB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Reviews.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nconst Reviews = () => {\n  const [status, setStatus] = useState('idle');\n  const [reviews, setReviews] = useState([]);\n  const { movieID } = useParams();\n\n  const baseURL = 'https://api.themoviedb.org/3';\n  const API_KEY = 'd25c90b85b8f344798ffe413cdb42b7f';\n\n  useEffect(() => {\n    const fetchReview = async () => {\n      try {\n        const response = await fetch(\n          `${baseURL}/movie/${movieID}/reviews?language=en-US&page=1&api_key=${API_KEY}`\n        );\n        if (!response.ok) {\n          return new Error('Oops, something went wrong');\n        }\n\n        const movies = await response.json();\n\n        const ShorteredReviews = movies.results.splice(0, 4);\n        setReviews(ShorteredReviews);\n\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n      }\n    };\n\n    fetchReview();\n  }, [movieID]);\n  return (\n    <>\n      {status === 'resolved' && (\n        <ul>\n          {reviews.length > 0 ? (\n            reviews.map(({ id, author, content }) => {\n              return (\n                <li key={id}>\n                  <div>\n                    <h1>{author}</h1>\n                    <p>{content}</p>\n                  </div>\n                </li>\n              );\n            })\n          ) : (\n            <p>There are no reviews</p>\n          )}\n        </ul>\n      )}\n      {status === 'rejected' && <h1>Something went wrong</h1>}\n    </>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","status","setStatus","reviews","setReviews","movieID","useParams","useEffect","fetchReview","fetch","response","ok","Error","json","movies","ShorteredReviews","results","splice","console","log","length","map","id","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}